---
import Faq from "@/components/Faq.astro";
import Feature from "@/components/home/Feature.astro";
import Hero from "@/components/home/Hero.astro";
import Reasons from "@/components/home/Reasons.astro";
import Video from "@/components/home/Video.astro";
import Plan from "@/components/pricing/Plan";
import Base from "@/layouts/Base.astro";
import { getListPage, getSinglePage } from "@/lib/contentParser.astro";
import { getLangFromUrl, supportedLang } from "@/lib/utils/languageParser";
import Testimonial from "@/partials/Testimonial.astro";
import type { ContentEntryMap } from "astro:content";

export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: { lang: lang || undefined },
  }));
  return paths;
}

const { lang } = Astro.params;
const language = lang || getLangFromUrl(Astro.url);

// ðŸŸ¢ Lade Inhalte wie vorher aus der Markdown-Datei
const homepage = await getListPage("homepage", lang as keyof ContentEntryMap);
const { feature, video, reason } = homepage[0].data;

// âœ… Always fetch from the local WordPress instance
const wpSlug = lang === "en" ? "homepage-en" : "homepage-de";
const username = "adjective";
const password = "marvelous";
const auth = btoa(`${username}:${password}`);

const res = await fetch(`https://your-live-link.live.site.io/wp-json/wp/v2/pages?slug=${wpSlug}`, {
  headers: {
    Authorization: `Basic ${auth}`,
  },
});
const data = await res.json();
const wpPage = data.length > 0 ? data[0] : null;

const buttons = [];

if (wpPage?.acf?.hero_button_label && wpPage?.acf?.hero_button_link) {
  buttons.push({
    label: wpPage.acf.hero_button_label,
    link: wpPage.acf.hero_button_link,
  });
}

const hero = {
  title: wpPage?.acf?.hero_title || "Fallback Title",
  content: wpPage?.acf?.hero_content || "<p>Fallback Text</p>",
  images: wpPage?.acf?.hero_images ? [wpPage.acf.hero_images.url] : [],
  buttons,
  client_logos: homepage[0].data.hero.client_logos,
};

const planData = await getSinglePage("planSection", lang as keyof ContentEntryMap, "plan");
const plan = planData.length > 0 ? planData[0] : null;

---

<Base>
  <Hero {hero} />
  <Feature {feature} />
  <Video {video} />
  <Reasons {reason} />
  {plan && <Plan {plan} lang={language as string} client:only="react" />}
  <Testimonial {testimonial} />
  <Faq />
</Base>
